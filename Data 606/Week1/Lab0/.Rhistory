install.packages("C:/Users/soh1/Box Sync/nViz/How to update optimizer/RMySQL_0.10.9.tar.gz", repos = NULL, type = "source")
install.packages("https://cran.r-project.org/src/contrib/Archive/RMySQL/RMySQL_0.10.9.tar.gz", repos = NULL, type = "source")
install.packages("https://cran.r-project.org/src/contrib/Archive/RMySQL/RMySQL_0.10.9.tar.gz", repos = NULL, type = "source",dependencies = T)
library("RMySQL", lib.loc="~/R/win-library/3.2")
detach("package:RMySQL", unload=TRUE)
knitr::opts_chunk$set(echo = TRUE)
f = 12
k=1
repeat {
f=f-1
if (f>0){
k = k*(f-1)
} else if (f=0 ) {
f = 12
k=1
repeat {
f=f-1
if (f>0){
k = k*(f-1)
} else if (f==0 ) {
break
}
}
f = 12
k=1
repeat {
f=f-1
if (f>1){
k = k*(f-1)
} else if (f==1 ) {
break
}
}
print(k)
f = 12
k=1
repeat {
if (f>1){
k = k*(f)
f=f-1
} else if (f==1 ) {
break
}
}
print(k)
numvec = vector()
numvec = c(20:50,5)
numvec
?c
?repeat
CC
?repeat
CC
?repeat()
numvec = seq(20:50,5)
numvec = seq(20,50,5)
numvec = seq(20,50,5)
knitr::opts_chunk$set(echo = TRUE)
f = 12
k=1
repeat {
if (f>1){
k = k*(f)
f=f-1
} else if (f==1 ) {
break
}
}
print(k)
unlink('C:/Users/soh1/Box Sync/CUNY/Summer Bridge 2017/Week1 - R/Week1_R_Assignment_cache', recursive = TRUE)
f = 12
k=1
repeat {
if (f>1){
k = k*(f)
f=f-1
} else if (f==1 ) {
break
}
}
print(k)
knitr::opts_chunk$set(echo = TRUE)
numvec = seq(20,50,5)
numvec = seq(20,50,5)
print(numvec)
knitr::opts_chunk$set(echo = TRUE)
f=12
k=1
repeat{
if(f>0){
k=k*(f)
f=f-1
} else if(f==0){
break
}
}
print(k)
numvec=seq(20,50,5)
print(numvec)
a=1
b=3
c=-4
x1= (-b+sqrt(b^2-4*a*c))/(2*a)
x2= (-b-sqrt(b^2-4*a*c))/(2*a)
print(c(x1,x2))
factorial = function(a=1, b=3, c=-4){
x1= (-b+sqrt(b^2-4*a*c))/(2*a)
x2= (-b-sqrt(b^2-4*a*c))/(2*a)
print(c(x1,x2))
}
factorial(a=4,b=3,c=2)
factorial = function(a=1, b=3, c=-4){
x1= (-b+sqrt(b^2-4*a*c))/(2*a)
x2= (-b-sqrt(b^2-4*a*c))/(2*a)
print(c(x1,x2))
}
factorial(a=2,b=-4,c=-3)
matrix = rbind([1,2,-3],[2,1,-3],[-1,1,2])
matrix = rbind((1,2,-3),(2,1,-3),(-1,1,2)
matrix = rbind((1,2,-3),(2,1,-3),(-1,1,2))
matrix = c(1,2,-3)
matrixA = c(1,2,-3)
matrixB = c(2,1,-3)
matrixC = c(-1,1,2)
matrixT = rbind(matrixA,matrixB,matrixC)
matrixT = as.matrix(rbind(matrixA,matrixB,matrixC))
View(matrixT)
inv_matrixT = inv(matrixT)
inv_matrixT = solve(matrixT)
View(inv_matrixT)
b=c(5,13,-8)
solve(matrixT,b)
matrixA = c(1,1,-3)
matrixB = c(2,1,-3)
matrixC = c(-1,1,2)
matrixT = as.matrix(rbind(matrixA,matrixB,matrixC))
inv_matrixT = solve(matrixT)
b=c(5,13,-8)
solve(matrixT,b)
matrixA = c(1,5,-3)
matrixB = c(2,13,-3)
matrixC = c(-1,-8,2)
matrixT = as.matrix(rbind(matrixA,matrixB,matrixC))
inv_matrixT = solve(matrixT)
b=c(5,13,-8)
solve(matrixT,b)
View(matrixT)
det_q = det(q)
q=matrix(c(3,1,4,4,3,3,2,3,2),nrow=3)
b=c(1,4,5)
det_q = det(q)
det_q1 = det(q(,1))
det_q1 = det(q(,1))
A=matrix(c(3,1,4,4,3,3,2,3,2),nrow=3)
b=c(1,4,5)
det_q = det(A)
det_q1 = det(A(,1))
det_q1 = det(A[,1]))
det_q1 = det(A[,1])
a[.1]
View(A)
A=as.matrix(c(3,1,4,4,3,3,2,3,2),nrow=3)
View(A)
A=matrix(c(3,1,4,4,3,3,2,3,2),nrow=3)
View(A)
det_q1 = det(A$V1)
det_q1 = det(A[1,])
b
t(b)
A1 = A
A1[.1] <- b
View(A)
View(A1)
A1[,1] <- b
View(A)
View(A1)
det_q = det(A)
A1 = A
A1[,1] <- b
det_q1 = det(A1)
A2 = A
A2[,2] <- b
det_q2 = det(A2)
A3 = A
A3[,3] <- b
det_q3 = det(A3)
A=matrix(c(3,1,4,4,3,3,2,3,2),nrow=3)
b=c(1,4,5)
det_A = det(A)
A1 = A
A1[,1] <- b
det_A1 = det(A1)
A2 = A
A2[,2] <- b
det_A2 = det(A2)
A3 = A
A3[,3] <- b
det_A3 = det(A3)
solve(A,b)
library(mgcv)
?dnorm
?pnorm
knitr::opts_chunk$set(echo = TRUE)
sd = 40000
mean = 1300
pnorm(979,mean,sd)
pnorm(979000000,mean,sd)
1-pnorm(979,mean,sd)
knitr::opts_chunk$set(echo = TRUE)
sd = sqrt(40000)
mean = 1300
1-pnorm(979,mean,sd)
sqrt(40000)
sd = sqrt(1960000)
mean = 11000
1-pnorm(8340,mean,sd)
sd = 3000000
mean = 80000000
lower.bound = 83000000
upper.bound = 85000000
pnorm(upper.bound,mean,sd) - pnorm(lower.bound,mean,sd)
load("C:/Users/soh1/Box Sync/Apple/LASSO/GAM Test/GAM.RData")
qnorm(0.86,0,1)
sd = 123
mean = 456
qnorm(0.86,mean,sd)
sd = 0.06
mean = 6.13
lower.bound = 0.07
upper.bound = 0.93
qnorm(upper.bound, mean, sd)
qnorm(lower.bound, mean, sd)
gammod$coefficients
library(DATA606)
getLabs()
getLabs("Lab0")
getLabs(Lab0)
startLab("Lab0")
startLab(Lab0)
viewLab('Lab0')
setwd("C:\\Users\\soh1\\Box Sync\\CUNY\\Fall 2017\\Data 606\\Week1")
startLab('Lab0')
startLab('Lab0')
setwd("C:\\Users\\soh1\\Box Sync\\CUNY\\Fall 2017\\Data 606\\Week1\\Lab0")
setwd("~/Lab0")
getwd()
setwd("C:\\Users\\soh1\\Box Sync\\CUNY\\Fall 2017\\Data 606\\Week1\\Lab0")
source("more/arbuthnot.R")
